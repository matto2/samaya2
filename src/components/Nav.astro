---
const { currentPage } = Astro.props;

const navItems = [
  { name: "Home", href: "/" },
  // { name: "About", href: "/about/" },
  { name: "Services", href: "/services/" },
  { name: "Contact", href: "/contact/" },
];
---

<nav class="relative">
  <div
    class="flex items-center justify-between text-text-dark py-4 px-4 md:px-6 7xl:px-0 bg-white"
  >
    <!-- Logo and Title -->
    <a href="/" class="logo-link flex items-center space-x-2 md:space-x-4">
      <img
        src="/logo2.svg"
        alt="logo"
        class="w-10 h-10 md:w-14 md:h-14 text-brand-primary"
      />
      <h1 class="text-lg md:text-2xl font-semibold text-brand-accent">
        Wellness Medical Center
      </h1>
    </a>

    <!-- Mobile Menu Button -->
    <button
      id="mobile-menu-button"
      class="md:hidden text-brand-secondary hover:text-brand-accent"
      aria-label="Toggle menu"
    >
      <span
        id="menu-text"
        class="px-3 py-1 border border-current rounded-md text-sm">Menu</span
      >
      <svg
        id="close-icon"
        class="hidden w-6 h-6"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <!-- Navigation Links -->
    <div
      id="mobile-menu"
      class="hidden md:flex flex-col md:flex-row items-center md:items-stretch justify-center md:justify-end space-y-6 md:space-y-0 md:space-x-12 text-xl text-brand-secondary"
    >
      {
        navItems.map(({ name, href }) => {
          const isActive =
            currentPage === href || (currentPage === "" && href === "/");
          return (
            <a
              href={href}
              class={`nav-link pb-1 text-center ${
                isActive
                  ? "font-bold text-brand-accent border-b-2 border-brand-accent"
                  : "hover:text-[#cc926a]"
              }`}
            >
              {name}
            </a>
          );
        })
      }
    </div>
  </div>
</nav>

<style>
  .logo-link {
    text-decoration: none !important;
    border-bottom: none !important;
  }
  .logo-link:hover,
  .logo-link:active,
  .logo-link:focus {
    text-decoration: none !important;
    border-bottom: none !important;
  }
  .nav-link {
    text-decoration-line: none;
  }
  .nav-link:hover {
    text-decoration-line: none;
  }
</style>

<script>
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");
  const menuText = document.getElementById("menu-text");
  const closeIcon = document.getElementById("close-icon");

  if (mobileMenuButton && mobileMenu && menuText && closeIcon) {
    mobileMenuButton.addEventListener("click", () => {
      mobileMenu.classList.toggle("hidden");
      mobileMenu.classList.toggle("absolute");
      mobileMenu.classList.toggle("top-full");
      mobileMenu.classList.toggle("left-0");
      mobileMenu.classList.toggle("right-0");
      mobileMenu.classList.toggle("bg-white");
      mobileMenu.classList.toggle("p-6");
      mobileMenu.classList.toggle("flex");
      mobileMenu.classList.toggle("shadow-lg");
      mobileMenu.classList.toggle("z-50");

      // Toggle between menu text and close icon
      menuText.classList.toggle("hidden");
      closeIcon.classList.toggle("hidden");
    });
  }
</script>
